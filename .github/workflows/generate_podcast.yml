# .github/workflows/generate_podcast.yml
name: Daily Oil Podcast Generator

on:
  schedule:
    - cron: '0 12 * * *'  # 12:00 PM UTC daily
  workflow_dispatch:
    inputs:
      debug:
        description: 'Enable debug output'
        required: false
        default: false
        type: boolean

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  generate-podcast:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      
      - name: Setup Python with cache
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'  # Cache dependencies for faster runs
      
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg
      
      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          
          # Verify Edge TTS is working
          edge-tts --list-voices | grep -E "en-US-(Christopher|Jenny)" || echo "Edge TTS voices available"
      
      - name: Show timing information
        run: |
          echo "🕐 Workflow triggered at: $(date)"
          echo "🌍 UTC time: $(date -u)"
          echo "🇺🇸 US Eastern time: $(TZ='America/New_York' date)"
          
      - name: Generate podcast with AI
        run: |
          echo "🎧 Starting AI-powered podcast generation..."
          echo "🤖 Using Gemini AI: ${GEMINI_API_KEY:+Yes (Key present)}"
          echo "🎙️ Using Edge TTS for voices"
          
          if [ "${{ inputs.debug }}" == "true" ]; then
            echo "🐛 Debug mode enabled"
            python -u main.py  # Unbuffered output
          else
            python main.py
          fi
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}  # ADD THIS SECRET IN GITHUB
          DEBUG_MODE: ${{ inputs.debug }}
          PYTHONUNBUFFERED: 1
      
      - name: Verify and optimize audio
        run: |
          # Check if file was created
          LATEST_FILE=$(ls -t docs/episodes/*.mp3 2>/dev/null | head -1)
          if [ -z "$LATEST_FILE" ]; then
            echo "❌ No podcast file generated"
            exit 1
          fi
          
          echo "✅ Generated: $LATEST_FILE"
          
          # Get file info
          du -h "$LATEST_FILE"
          
          # Optimize for streaming (optional)
          ffmpeg -i "$LATEST_FILE" -codec:a libmp3lame -b:a 128k -ar 44100 "${LATEST_FILE}.tmp" -y
          mv "${LATEST_FILE}.tmp" "$LATEST_FILE"
          
          echo "📊 Optimized file size: $(du -h "$LATEST_FILE")"
      
      - name: Commit and push podcast
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          
          git add -f docs/episodes/*.mp3 || echo "No MP3 files to add"
          git add docs/feed.xml || echo "No feed.xml changes"
          git add docs/index.html || echo "No index.html changes"
          
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            # Include AI indicator in commit message
            if [ -n "${{ secrets.GEMINI_API_KEY }}" ]; then
              git commit -m "🤖 Add AI-generated podcast for $(date +'%Y-%m-%d') [automated]"
            else
              git commit -m "🎧 Add podcast for $(date +'%Y-%m-%d') [automated]"
            fi
            
            # Push with retry
            max_attempts=3
            for attempt in $(seq 1 $max_attempts); do
              if git push origin main; then
                echo "✅ Push successful"
                break
              else
                if [ $attempt -eq $max_attempts ]; then
                  echo "❌ All push attempts failed"
                  exit 1
                else
                  echo "Retrying push..."
                  sleep 5
                  git pull --rebase origin main
                fi
              fi
            done
          fi
      
      - name: Keep only last 30 episodes
        run: |
          cd docs/episodes
          file_count=$(ls -1 *.mp3 2>/dev/null | wc -l)
          
          if [ "$file_count" -gt 30 ]; then
            echo "Cleaning old episodes (keeping latest 30)..."
            ls -t *.mp3 | tail -n +31 | xargs -r rm
            cd ../..
            git add docs/episodes/
            if ! git diff --staged --quiet; then
              git commit -m "🗑️ Cleanup old episodes [automated]"
              git push origin main
            fi
          fi
      
      - name: Workflow summary
        run: |
          echo "## 📊 Podcast Generation Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Date**: $(date +'%Y-%m-%d %H:%M')" >> $GITHUB_STEP_SUMMARY
          echo "- **AI Script**: ${GEMINI_API_KEY:+✅ Enabled}" >> $GITHUB_STEP_SUMMARY
          echo "- **TTS Engine**: Edge TTS (Microsoft Neural Voices)" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ✅ Success" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🎧 [Listen to Latest Episode](https://shariqbaig.github.io/oil-podcast-generator/)" >> $GITHUB_STEP_SUMMARY
          echo "📡 [RSS Feed](https://shariqbaig.github.io/oil-podcast-generator/feed.xml)" >> $GITHUB_STEP_SUMMARY